#!/usr/bin/env python
"""
MDB.

https://github.com/GII/MDB
"""

import argparse
import sys
import bz2
import magic
import pandas
import matplotlib.pyplot as plt
import seaborn


def open_file(name):
    """Open a file using its magic number to identify its contents."""
    file_type = magic.from_file(name)
    if "text" in file_type:
        return open(name, encoding="utf-8")
    if "bzip2" in file_type:
        return bz2.open(name)
    print("Unsupported file!!!")
    sys.exit(1)


def goodness_average():
    """Merge goodness files."""
    parser = argparse.ArgumentParser(description="Merge goodness files")
    parser.add_argument("files", nargs="+", help="File names to merge")
    args = parser.parse_args()
    data = []
    for file_name in args.files:
        data.append(
            pandas.read_table(
                open_file(file_name),
                names=(
                    "Iteration",
                    "Average reward",
                    "Iterations with no change",
                    "Rewarded iterations",
                ),
                index_col=(0, 1),
            )
        )
    data = pandas.concat(data)
    seaborn.set_theme(context="paper", style="whitegrid")
    seaborn.relplot(data=data, x="Iteration", y="Rewarded iterations", kind="line").set_axis_labels(
        "Iteration", "% rewarded iterations"
    )
    plt.show()
    # data = data.groupby(by=["Iteration"])["Rewarded iterations"].agg(["mean", "std"])
    # n_data = len(args.files)
    # data["ic_low"] = data["mean"] - 1.96 * data["std"] / numpy.sqrt(n_data)
    # data["ic_high"] = data["mean"] + 1.96 * data["std"] / numpy.sqrt(n_data)
    # seaborn.relplot(data=data, kind="line").set_axis_labels("Iteration", "% rewarded iterations")
    # data.to_excel("pnodes_grouped_success_average.xlsx", index=False)


if __name__ == "__main__":
    goodness_average()
