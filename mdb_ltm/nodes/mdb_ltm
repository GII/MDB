#!/usr/bin/env python
"""
MDB

Available from https://github.com/robotsthatdream/MDB
Distributed under GPLv3.
"""

# Python 2 compatibility imports
from __future__ import absolute_import, division, print_function, unicode_literals
from future import standard_library

standard_library.install_aliases()
from builtins import *  # noqa pylint: disable=unused-wildcard-import,wildcard-import

# Library imports
import argparse

# MDB imports
from mdb_ltm.ltm import LTM


def start_ltm():
    """Create a LTM object and run it."""
    parser = argparse.ArgumentParser(
        description="This script starts the LTM component of the MDB 3.0"
    )
    parser.add_argument(
        "-rs", "--random_seed", type=int, help="Set the seed of the random number generator"
    )
    parser.add_argument(
        "-b",
        "--backup",
        help="LTM backup / memory dump file. "
        "If it exists, it reads its contents. "
        "Otherwise, it creates the file. "
        "When the process ends, the backup file is updated.",
    )
    parser.add_argument("-s", "--seed", help="Yaml file with some nodes to populate the LTM")
    parser.add_argument(
        "-l", "--log_level", help="ROS log level (DEBUG, INFO, WARN, ERROR or FATAL)"
    )
    args, _ = parser.parse_known_args()
    kwargs = vars(args)
    backup = kwargs.pop("backup", None)
    ltm = LTM.restore(backup)
    ltm.run(**kwargs)


if __name__ == "__main__":
    start_ltm()
