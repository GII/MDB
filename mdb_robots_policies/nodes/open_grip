#!/usr/bin/env python
"""
MDB.

https://github.com/GII/MDB
"""

# Python 2 compatibility imports
from __future__ import absolute_import, division, print_function
from future import standard_library

standard_library.install_aliases()
from builtins import object

# Library imports
import rospy
from sensor_msgs.msg import JointState
from baxter_interface.gripper import Gripper

# MDB imports
from mdb_common.msg import OpenGripReq


class open_grip(object):
    def __init__(self):
        rospy.init_node("open_grip_server")

        self.arm = rospy.get_param("~arm")
        self.gripper = Gripper(self.arm)

        self.angle = None
        self.arm_check = None

        self.state_sub = rospy.Subscriber("/robot/joint_states", JointState, self.state_cb)
        self.grip_sub = rospy.Subscriber("/open_grip", OpenGripReq, self.open_grip_cb)

    def select_arm_angle(self, arg):
        options = {
            "left": 7,
            "right": 14,
        }
        return options[arg]

    def state_cb(self, state):
        if (
            self.angle is not None
            and self.arm == self.arm_check
            and self.arm + "_w1" in state.name[:]
            and state.position[self.select_arm_angle(self.arm)] < self.angle
        ):
            print("opening grip " + self.arm)
            self.gripper.open()
            self.angle = None

    def open_grip_cb(self, msg):
        self.angle = msg.angle
        self.arm_check = msg.arm.data


def open_grip_server():
    open_grip()
    rospy.spin()


if __name__ == "__main__":
    open_grip_server()
