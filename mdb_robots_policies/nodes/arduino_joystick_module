#!/usr/bin/env python
"""
MDB.

https://github.com/GII/MDB
"""

# Python 2 compatibility imports
from __future__ import absolute_import, division, print_function
from future import standard_library

standard_library.install_aliases()
from builtins import int, object

# Standard imports
import rospy
from geometry_msgs.msg import Vector3
import serial


class arduino_joystick_module(object):
    def __init__(self):
        self.blu = None
        self.joystick_pub = rospy.Publisher("/joystick/data", Vector3, queue_size=1)

    def translate_input(self, data):
        button, coor = data.split("=")
        x, y = coor.split(":")
        return int(button), int(x), int(y)

    def pair_device_as_serial(self, port, baudrate):
        self.blu = serial.Serial(port, baudrate)
        self.blu.flushInput()

    def listen_to_joystick(self):
        msg = Vector3()
        while not rospy.is_shutdown():
            input_data = self.blu.readline()
            if len(input_data) > 6 and input_data.find("=") and input_data.find(":"):
                _, x, y = self.translate_input(input_data)
                msg.x = x
                msg.y = y
                self.joystick_pub.publish(msg)

    def initialize_bluetooth_connection(self):
        self.pair_device_as_serial("/dev/rfcomm0", 9600)
        rospy.loginfo("Listening to the joystick...")
        self.listen_to_joystick()
        self.blu.close()


if __name__ == "__main__":
    rospy.init_node("arduino_joystick_module")
    ajm = arduino_joystick_module()
    ajm.initialize_bluetooth_connection()
    rospy.spin()
