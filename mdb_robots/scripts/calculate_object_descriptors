#!/usr/bin/env python
"""
MDB.

Available from https://github.com/robotsthatdream/MDB
Distributed under GPLv3.
"""

from __future__ import absolute_import, division, print_function, unicode_literals
from builtins import *  # noqa
import sys
import glob
import numpy
import pandas


def calculate_object_descriptors(directory):
    csv_files = glob.glob(directory + "/*.csv")
    data_frames = []
    for file_name in csv_files:
        data_frames.append(pandas.read_csv(file_name, delim_whitespace=True, header=None))
    data = pandas.concat(data_frames, ignore_index=True)
    n_columns = data.shape[1]
    n_color_attributes = (n_columns - 3) // 3
    object_descriptors = []
    for object_type in data[0].unique():
        object_data = data[data[0] == object_type]
        descriptors = object_data.loc[:, 3:n_columns].mean()
        red = descriptors[0:n_color_attributes]
        red /= numpy.sum(red)
        green = descriptors[n_color_attributes : 2 * n_color_attributes]
        green /= numpy.sum(green)
        blue = descriptors[2 * n_color_attributes : 3 * n_color_attributes]
        blue /= numpy.sum(blue)
        concatenated_descriptors = pandas.concat([pandas.Series([object_type]), red, green, blue], ignore_index=True)
        object_descriptors.append(pandas.DataFrame(concatenated_descriptors).transpose())
    features = pandas.concat(object_descriptors, ignore_index=True)
    features.to_csv(directory + "/objects.csv", sep="\t", header=False, index=False)


if __name__ == "__main__":
    calculate_object_descriptors(sys.argv[1])
